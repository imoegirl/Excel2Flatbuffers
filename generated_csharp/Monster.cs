// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::FlatBuffers;

public struct FBMonster : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static FBMonster GetRootAsFBMonster(ByteBuffer _bb) { return GetRootAsFBMonster(_bb, new FBMonster()); }
  public static FBMonster GetRootAsFBMonster(ByteBuffer _bb, FBMonster obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public FBMonster __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Name { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span(4); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(4); }
  public int Hp { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Attack { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<FBMonster> CreateFBMonster(FlatBufferBuilder builder,
      StringOffset nameOffset = default(StringOffset),
      int hp = 0,
      int attack = 0) {
    builder.StartObject(3);
    FBMonster.AddAttack(builder, attack);
    FBMonster.AddHp(builder, hp);
    FBMonster.AddName(builder, nameOffset);
    return FBMonster.EndFBMonster(builder);
  }

  public static void StartFBMonster(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(0, nameOffset.Value, 0); }
  public static void AddHp(FlatBufferBuilder builder, int hp) { builder.AddInt(1, hp, 0); }
  public static void AddAttack(FlatBufferBuilder builder, int attack) { builder.AddInt(2, attack, 0); }
  public static Offset<FBMonster> EndFBMonster(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<FBMonster>(o);
  }
};

